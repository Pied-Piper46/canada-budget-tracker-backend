"""Initial shema

Revision ID: 044d186218d5
Revises: 
Create Date: 2025-09-09 18:08:46.814595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '044d186218d5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("CREATE SCHEMA IF NOT EXISTS cibc_budget_tracker_sandbox")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('institution_name', sa.String(length=100), nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=True),
    sa.Column('account_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('account_id'),
    schema='cibc_budget_tracker_sandbox'
    )
    op.create_table('custom_categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('name'),
    schema='cibc_budget_tracker_sandbox'
    )
    op.create_table('sync_cursors',
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('cursor', sa.String(length=255), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['cibc_budget_tracker_sandbox.accounts.account_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('account_id'),
    schema='cibc_budget_tracker_sandbox'
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.String(length=255), nullable=False),
    sa.Column('account_id', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('merchant_name', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('pending', sa.Boolean(), nullable=True),
    sa.Column('pending_transaction_id', sa.String(length=255), nullable=True),
    sa.Column('personal_finance_category_primary', sa.String(length=100), nullable=True),
    sa.Column('personal_finance_category_detailed', sa.String(length=100), nullable=True),
    sa.Column('custom_category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_removed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['cibc_budget_tracker_sandbox.accounts.account_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id'),
    schema='cibc_budget_tracker_sandbox'
    )
    op.drop_table('_prisma_migrations')

    op.create_index('idx_transactions_account_id', 'transactions', ['account_id'], unique=False, schema='cibc_budget_tracker_sandbox')
    op.create_index('idx_transactions_date', 'transactions', ['transaction_date'], unique=False, schema='cibc_budget_tracker_sandbox')
    op.create_index('idx_transactions_category', 'transactions', ['personal_finance_category_primary'], unique=False, schema='cibc_budget_tracker_sandbox')
    op.create_index('idx_transactions_pending', 'transactions', ['pending'], unique=False, schema='cibc_budget_tracker_sandbox')
    op.create_index('idx_transactions_is_removed', 'transactions', ['is_removed'], unique=False, schema='cibc_budget_tracker_sandbox')

    op.create_foreign_key(
        'fk_custom_category',
        'transactions',
        'custom_categories',
        ['custom_category_id'],
        ['category_id'],
        ondelete='SET NULL',
        source_schema='cibc_budget_tracker_sandbox',
        referent_schema='cibc_budget_tracker_sandbox'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('_prisma_migrations_pkey'))
    )
    op.drop_table('transactions', schema='cibc_budget_tracker_sandbox')
    op.drop_table('sync_cursors', schema='cibc_budget_tracker_sandbox')
    op.drop_table('custom_categories', schema='cibc_budget_tracker_sandbox')
    op.drop_table('accounts', schema='cibc_budget_tracker_sandbox')

    op.drop_index('idx_transactions_is_removed', table_name='transactions', schema='cibc_budget_tracker_sandbox')
    op.drop_index('idx_transactions_pending', table_name='transactions', schema='cibc_budget_tracker_sandbox')
    op.drop_index('idx_transactions_category', table_name='transactions', schema='cibc_budget_tracker_sandbox')
    op.drop_index('idx_transactions_date', table_name='transactions', schema='cibc_budget_tracker_sandbox')
    op.drop_index('idx_transactions_account_id', table_name='transactions', schema='cibc_budget_tracker_sandbox')

    op.drop_constraint('fk_custom_category', 'transactions', type_='foreignkey', schema='cibc_budget_tracker_sandbox')

    op.execute("DROP SCHEMA IF EXISTS cibc_budget_tracker_sandbox CASCADE")
    # ### end Alembic commands ###
